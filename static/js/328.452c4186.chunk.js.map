{"version":3,"file":"static/js/328.452c4186.chunk.js","mappings":"kPAEaA,EAAYC,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2EAOtBC,EAASH,EAAAA,EAAAA,OAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oFAOtBG,EAAgBL,EAAAA,EAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,kFAE5B,SAACK,GAAK,OAAMA,EAAMC,SAAW,SAAW,OAAO,I,SCd3C,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAqBpC,OAnBAI,EAAAA,EAAAA,YAAU,WAEkB,MAAtBR,EAASS,SACXF,EAAgB,QACPP,EAASS,SAASC,WAAW,WACtCH,EAAgB,UAEhBA,EAAgB,GAEpB,GAAG,CAACP,EAASS,YAGbD,EAAAA,EAAAA,YAAU,WAEHF,GACHC,EAAgB,OAEpB,GAAG,CAACD,KAGFK,EAAAA,EAAAA,MAACtB,EAAS,CAAAuB,SAAA,EACRD,EAAAA,EAAAA,MAAClB,EAAM,CAAAmB,SAAA,EACLC,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,GAAG,IAAIC,gBAAgB,cAAcC,OAAK,EAAAL,UACjDC,EAAAA,EAAAA,KAAClB,EAAa,CAACG,SAA2B,SAAjBQ,EAAwBM,SAAC,YAEpDC,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,GAAG,UAAUC,gBAAgB,cAAaJ,UACjDC,EAAAA,EAAAA,KAAClB,EAAa,CAACG,SAA2B,WAAjBQ,EAA0BM,SAAC,iBAGxDC,EAAAA,EAAAA,KAACK,EAAAA,SAAQ,CAACC,UAAUN,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eAAgBA,UACtCC,EAAAA,EAAAA,KAACO,EAAAA,GAAM,QAIf,C","sources":["components/SharedLayout/SharedLayout.styled.js","components/SharedLayout/SharedLayout.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  padding: 30px;\n`;\n\nexport const Header = styled.header`\n  display: flex;\n  flex-direction: row;\n  padding: 10px;\n  gap: 20px;\n`;\n\nexport const StyledNavLink = styled.div`\n  font-size: 30px;\n  color: ${(props) => (props.isActive ? 'orange' : 'black')};\n\n  :hover {\n    color: blue;\n  }\n`;\n\n\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, NavLink, useLocation } from 'react-router-dom';\nimport { Container, Header, StyledNavLink } from './SharedLayout.styled';\n\nexport default function SharedLayout() {\n  const location = useLocation();\n  const [activeButton, setActiveButton] = useState('');\n\n  useEffect(() => {\n    // Определяем, какая кнопка должна быть активной на основе текущего пути\n    if (location.pathname === '/') {\n      setActiveButton('home');\n    } else if (location.pathname.startsWith('/movies')) {\n      setActiveButton('movies');\n    } else {\n      setActiveButton('');\n    }\n  }, [location.pathname]);\n\n  // Эффект при монтировании компонента\n  useEffect(() => {\n    // Если путь не совпадает ни с одним из условий, устанавливаем активной кнопку \"Home\"\n    if (!activeButton) {\n      setActiveButton('home');\n    }\n  }, [activeButton]);\n\n  return (\n    <Container>\n      <Header>\n        <NavLink to=\"/\" activeClassName=\"active-link\" exact>\n          <StyledNavLink isActive={activeButton === 'home'}>Home</StyledNavLink>\n        </NavLink>\n        <NavLink to=\"/movies\" activeClassName=\"active-link\">\n          <StyledNavLink isActive={activeButton === 'movies'}>Movies</StyledNavLink>\n        </NavLink>\n      </Header>\n      <Suspense fallback={<h2>Loading...</h2>}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n}\n\n\n\n\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Header","_templateObject2","StyledNavLink","_templateObject3","props","isActive","SharedLayout","location","useLocation","_useState","useState","_useState2","_slicedToArray","activeButton","setActiveButton","useEffect","pathname","startsWith","_jsxs","children","_jsx","NavLink","to","activeClassName","exact","Suspense","fallback","Outlet"],"sourceRoot":""}