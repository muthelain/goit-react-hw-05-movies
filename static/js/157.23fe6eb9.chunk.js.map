{"version":3,"file":"static/js/157.23fe6eb9.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx","utils/GetDataFromAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledMovieCard = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const MoviePoster = styled.img`\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const AdditionalInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport {\n  AdditionalInfo,\n  MovieInfo,\n  MoviePoster,\n  StyledMovieCard,\n} from './MovieCard.styled';\n\nexport function MovieCard({ image, title, description, genres, rating }) {\n  const genresList = genres?.flatMap(genre => genre.name);\n  const userScore = Math.round(rating * 10);\n  const imgURL = 'https://image.tmdb.org/t/p/w500';\n  return (\n    <StyledMovieCard>\n      <MoviePoster src={`${imgURL}${image}`} alt={title} />\n      <MovieInfo>\n        <h2>{title}</h2>\n        <p>{`User Score: ${userScore}%`}</p>\n        <div>\n          {' '}\n          <h3>Overview</h3>\n          <p>{description}</p>\n        </div>\n        <div>\n          {' '}\n          <h3>Genres</h3>\n          <p>{genresList?.join(', ')}</p>\n        </div>\n        <h4>Additional information</h4>\n        <AdditionalInfo>\n          <Link to=\"cast\">Cast</Link>\n          <Link to=\"reviews\">Reviews</Link>\n        </AdditionalInfo>\n      </MovieInfo>\n    </StyledMovieCard>\n  );\n}\n\nMovieCard.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  genres: PropTypes.array,\n  rating: PropTypes.number,\n};\n","import { MovieCard } from 'components/MovieCard/MovieCard';\nimport { useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieById } from 'utils/GetDataFromAPI';\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    getMovieById(movieId)\n      .then(data => {\n        setMovie(data);\n      })\n  }, [movieId]);\n\n  const { poster_path, title, name, overview, genres, vote_average } = movie;\n\n  return (\n    <>\n      <Link to={backLink.current}>Вернуться</Link>\n      {movie && Object.keys(movie).length > 0 ? (\n        <MovieCard\n          image={poster_path}\n          title={title || name}\n          description={overview}\n          genres={genres}\n          rating={vote_average}\n        />\n      ) : (\n        <p>Загрузка...</p>\n      )}\n\n      <Outlet />\n    </>\n  );\n}","import axios from 'axios';\n\nconst TRENDING_URL = 'https://api.themoviedb.org/3/trending/all/day?language=en-US';\nconst MOVIE_SEARCH_BY_ID = 'https://api.themoviedb.org/3/movie/';\nconst MOVIE_SEARCH_BY_NAME = 'https://api.themoviedb.org/3/search/movie?query=';\nconst options = {\n  params: {\n    api_key: '3c41cda8ab41cc0930ce9dd36c8f89cb',\n  },\n};\n\nexport async function getTrendingsFromAPI() {\n  const data = await axios\n    .get(TRENDING_URL, options)\n    .then(response => response.data);\n  return data;\n}\n\nexport async function getMovieById(movieId) {\n  const data = await axios\n    .get(MOVIE_SEARCH_BY_ID + movieId, options)\n    .then(response => response.data);\n  return data;\n}\n\nexport async function getMovieByName(movieName) {\n  const data = await axios\n    .get(MOVIE_SEARCH_BY_NAME + movieName, options)\n    .then(response => response.data);\n  return data;\n}\n\nexport async function getMovieDetails(movieId, path) {\n  const data = await axios\n    .get(MOVIE_SEARCH_BY_ID + movieId + `/${path}`, options)\n    .then(response => response.data);\n  return data;\n}\n\n\n\n\n"],"names":["StyledMovieCard","styled","_templateObject","_taggedTemplateLiteral","MoviePoster","_templateObject2","MovieInfo","_templateObject3","AdditionalInfo","_templateObject4","MovieCard","_ref","image","title","description","genres","rating","genresList","flatMap","genre","name","userScore","Math","round","_jsxs","children","_jsx","src","concat","alt","join","Link","to","MovieDetails","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movie","setMovie","movieId","useParams","location","useLocation","backLink","useRef","state","from","useEffect","getMovieById","then","data","poster_path","overview","vote_average","_Fragment","current","Object","keys","length","Outlet","TRENDING_URL","MOVIE_SEARCH_BY_ID","MOVIE_SEARCH_BY_NAME","options","params","api_key","getTrendingsFromAPI","_getTrendingsFromAPI","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","axios","response","sent","abrupt","stop","_x","_getMovieById","_callee2","_context2","getMovieByName","_x2","_getMovieByName","_callee3","movieName","_context3","getMovieDetails","_x3","_x4","_getMovieDetails","_callee4","path","_context4"],"sourceRoot":""}